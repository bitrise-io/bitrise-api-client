{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Official REST API for Bitrise.io",
        "title": "Bitrise API",
        "contact": {
            "name": "Bitrise Support",
            "url": "https://www.bitrise.io/contact",
            "email": "letsconnect@bitrise.io"
        },
        "license": {
            "name": "MIT"
        },
        "version": "0.1"
    },
    "host": "api.bitrise.io",
    "basePath": "/v0.1",
    "paths": {
        "/addons": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the available Bitrise addons",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addons"
                ],
                "summary": "Get list of available Bitrise addons",
                "operationId": "addons-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AddonsListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/addons/{addon-id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show details of a specific Bitrise addon",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addons"
                ],
                "summary": "Get a specific Bitrise addon",
                "operationId": "addons-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Addon ID",
                        "name": "addon-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AddonsShowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the apps available for the authenticated account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "Get list of the apps",
                "operationId": "app-list",
                "parameters": [
                    {
                        "enum": [
                            "last_build_at",
                            "created_at"
                        ],
                        "type": "string",
                        "description": "Order of the applications",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first app in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show details of a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "Get a specific app",
                "operationId": "app-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppShowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/android-keystore-files": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new Android keystore file to an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "android-keystore-file"
                ],
                "summary": "Create an Android keystore file",
                "operationId": "android-keystore-file-create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Android keystore file parameters",
                        "name": "android-keystore-file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AndroidKeystoreFileUploadParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/bitrise.yml": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show details of a specific app",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "application"
                ],
                "summary": "Get bitrise.yml of a specific app",
                "operationId": "app-config-datastore-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{the bitrise.yml in yml format}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/branches": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List the existing branches of the repository of a specified Bitrise app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "List the branches of an app's repository",
                "operationId": "branch-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BranchListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/build-certificates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the build certificates for a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-certificate"
                ],
                "summary": "Get list of the build certificates",
                "operationId": "build-certificate-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first build certificate in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildCertificateListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new build certificate to a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-certificate"
                ],
                "summary": "Create a build certificate",
                "operationId": "build-certificate-create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Build certificate parameters",
                        "name": "build-certificate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildCertificateUploadParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildCertificateResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/build-certificates/{build-certificate-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show details of a specific build certificate of a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-certificate"
                ],
                "summary": "Get a specific build certificate",
                "operationId": "build-certificate-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build certificate slug",
                        "name": "build-certificate-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildCertificateResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a specific build certificate from a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-certificate"
                ],
                "summary": "Delete a build certificate",
                "operationId": "build-certificate-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build certificate slug",
                        "name": "build-certificate-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildCertificateResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a specific build certificate of a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-certificate"
                ],
                "summary": "Update a build certificate",
                "operationId": "build-certificate-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build certificate slug",
                        "name": "build-certificate-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Build certificate parameters",
                        "name": "build-certificate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildCertificateUpdateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildCertificateResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Confirm the upload of a specific build certificate of a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-certificate"
                ],
                "summary": "Confirm a build certificate",
                "operationId": "build-certificate-confirm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build certificate slug",
                        "name": "build-certificate-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildCertificateResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/build-workflows": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List the workflows that are currently available for a specified Bitrise app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "builds"
                ],
                "summary": "List the workflows of an app",
                "operationId": "build-workflow-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildLogInfoResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/builds": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the builds of a specified Bitrise app. Set parameters to filter builds.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "builds"
                ],
                "summary": "List all builds of an app",
                "operationId": "build-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "running_first",
                            "created_at"
                        ],
                        "type": "string",
                        "description": "Order of builds",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The branch which was built",
                        "name": "branch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The name of the workflow used for the build",
                        "name": "workflow",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The commit message of the build",
                        "name": "commit_message",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The event that triggered the build (push, pull-request, tag)",
                        "name": "trigger_event_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The id of the pull request that triggered the build",
                        "name": "pull_request_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The build number",
                        "name": "build_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "List builds run after a given date (Unix Timestamp)",
                        "name": "after",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "List builds run before a given date (Unix Timestamp)",
                        "name": "before",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The status of the build: not finished (0), successful (1), failed (2), aborted with failure (3), aborted with success (4)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first build in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/builds/{build-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the specified build of a specified Bitrise app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "builds"
                ],
                "summary": "Get a build of a given app",
                "operationId": "build-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build slug",
                        "name": "build-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildShowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/abort": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Abort a specific build",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "builds"
                ],
                "summary": "Abort a specific build",
                "operationId": "build-abort",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build slug",
                        "name": "build-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Build abort parameters",
                        "name": "build-abort-params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildAbortParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildAbortResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/artifacts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the available build artifacts for a specific build in a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-artifact"
                ],
                "summary": "Get list of the build artifacts",
                "operationId": "artifact-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build slug",
                        "name": "build-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first build artifact in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ArtifactListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show details of a specific build artifact",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-artifact"
                ],
                "summary": "Get a specific build artifact",
                "operationId": "artifact-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build slug",
                        "name": "build-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Artifact slug",
                        "name": "artifact-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ArtifactShowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a specific build artifact of a specific build in a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-artifact"
                ],
                "summary": "Delete a build artifact",
                "operationId": "artifact-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build slug",
                        "name": "build-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Artifact slug",
                        "name": "artifact-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ArtifactDeleteResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a specific build artifact of a specific build in a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build-artifact"
                ],
                "summary": "Update a build artifact",
                "operationId": "artifact-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build slug",
                        "name": "build-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Artifact slug",
                        "name": "artifact-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Artifact parameters",
                        "name": "artifact-params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ArtifactUpdateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ArtifactShowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/bitrise.yml": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the bitrise.yml file of one of the builds of a specified app",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "builds"
                ],
                "summary": "Get the bitrise.yml of a build",
                "operationId": "build-bitrise-yml-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build slug",
                        "name": "build-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{the bitrise.yml in yml format}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/builds/{build-slug}/log": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the build log of a specified build of a Bitrise app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "builds"
                ],
                "summary": "Get the build log of a build",
                "operationId": "build-log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Build slug",
                        "name": "build-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildLogInfoResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/generic-project-files": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the generic project files for a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Get list of the generic project files",
                "operationId": "generic-project-file-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first generic project file in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new generic project file to a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Create a generic project file",
                "operationId": "generic-project-files-create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Generic project file parameters",
                        "name": "generic-project-file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageUploadParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/generic-project-files/{generic-project-file-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show details of a specific generic project file of a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Get a specific generic project file",
                "operationId": "generic-project-file-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Generic project file slug",
                        "name": "generic-project-file-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a specific generic project file from a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Delete a generic project file",
                "operationId": "generic-project-file-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Generic project file slug",
                        "name": "generic-project-file-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a specific generic project file of a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Update a generic project file",
                "operationId": "generic-project-file-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Generic project file slug",
                        "name": "generic-project-file-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Generic project file parameters",
                        "name": "generic-project-file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageDocumentUpdateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Confirm the upload of a specific generic project file of a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generic-project-file"
                ],
                "summary": "Confirm a generic project file",
                "operationId": "generic-project-file-confirm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Generic project file slug",
                        "name": "generic-project-file-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProjectFileStorageResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/outgoing-webhooks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the outgoing webhooks registered for a specified Bitrise app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "outgoing-webhook"
                ],
                "summary": "List the outgoing webhooks of an app",
                "operationId": "outgoing-webhook-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first webhook in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppWebhookListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an outgoing webhook for a specified Bitrise app: this can be used to send build events to a specified URL with custom headers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "outgoing-webhook"
                ],
                "summary": "Create an outgoing webhook for an app",
                "operationId": "outgoing-webhook-create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "App webhook creation params",
                        "name": "app-webhook-create-params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppWebhookCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppWebhookResponseItemModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing outgoing webhook (URL, events, secrets and headers) for a specified Bitrise app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "outgoing-webhook"
                ],
                "summary": "Update an outgoing webhook of an app",
                "operationId": "outgoing-webhook-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App webhook slug",
                        "name": "app-webhook-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "App webhook update params",
                        "name": "app-webhook-update-params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppWebhookUpdateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppWebhookResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an existing outgoing webhook for a specified Bitrise app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "outgoing-webhook"
                ],
                "summary": "Delete an outgoing webhook of an app",
                "operationId": "outgoing-webhook-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App webhook slug",
                        "name": "app-webhook-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppWebhookResponseItemModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the delivery items of an outgoing webhook of a Bitrise application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook-delivery-item"
                ],
                "summary": "List the webhook delivery items of an app",
                "operationId": "webhook-delivery-item-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App webhook slug",
                        "name": "app-webhook-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first delivery item in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.WebhookDeliveryItemShowResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the specified delivery item of an outgoing webhook of a Bitrise application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook-delivery-item"
                ],
                "summary": "Get a specific delivery item of a webhook",
                "operationId": "webhook-delivery-item-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App webhook slug",
                        "name": "app-webhook-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Webhook delivery item slug",
                        "name": "webhook-delivery-item-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.WebhookDeliveryItemResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Re-deliver the delivery item of a specified webhook of a Bitrise application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhook-delivery-item"
                ],
                "summary": "Re-deliver the webhook delivery items of an app",
                "operationId": "webhook-delivery-item-redeliver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App webhook slug",
                        "name": "app-webhook-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Webhook delivery item slug",
                        "name": "webhook-delivery-item-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/provisioning-profiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the provisioning profiles for a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Get list of the provisioning profiles",
                "operationId": "provisioning-profile-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first provisioning profile in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProvisionProfileListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new provisioning profile to a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Create a provisioning profile",
                "operationId": "provisioning-profile-create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Provisioning profile parameters",
                        "name": "provisioning-profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProvisionProfileUploadParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProvisionProfileResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show details of a specific provisioning profile of a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Get a specific provisioning profile",
                "operationId": "provisioning-profile-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provisioning profile slug",
                        "name": "provisioning-profile-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProvisionProfileResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a specific provisioning profile from a specific app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Delete a provisioning profile",
                "operationId": "provisioning-profile-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provisioning profile slug",
                        "name": "provisioning-profile-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProvisionProfileResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a specific provisioning profile of a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Update a provisioning profile",
                "operationId": "provisioning-profile-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provisioning profile slug",
                        "name": "provisioning-profile-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Provisioning profile parameters",
                        "name": "provisioning-profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProvProfileDocumentUpdateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProvisionProfileResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Confirm the upload of a specific provisioning profile of a specific app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provisioning-profile"
                ],
                "summary": "Confirm a provisioning profile",
                "operationId": "provisioning-profile-confirm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App slug",
                        "name": "app-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provisioning profile slug",
                        "name": "provisioning-profile-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ProvisionProfileResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/builds": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the Bitrise builds of the authenticated account. Set parameters to filter builds.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "builds"
                ],
                "summary": "List all builds",
                "operationId": "build-list-all",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The slug of the owner of the app or apps",
                        "name": "owner_slug",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Indicates whether the build has started yet (true: the build hasn't started)",
                        "name": "is_on_hold",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The status of the build: not finished (0), successful (1), failed (2), aborted with failure (3), aborted with success (4)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first build in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.BuildListAllResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Shows the authenticated users profile data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get your profile data",
                "operationId": "user-profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.UserProfileRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/me/activities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the Bitrise activity events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get list of Bitrise activity events",
                "operationId": "activity-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug of the first activity event in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.ActivityEventListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/me/plan": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the subscription of the user: the current plan, any pending plans, and the duration of a trial period if applicable",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "The subscription plan of the user",
                "operationId": "user-plan",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.UserPlanRespModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all Bitrise organizations that the user is part of",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "List the organizations that the user is part of",
                "operationId": "org-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.OrganizationListRespModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/organizations/{org-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a specified Bitrise organization that the user is part of.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get a specified organization.",
                "operationId": "org-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The organization slug",
                        "name": "org-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.OrganizationRespModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/organizations/{org-slug}/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the available apps for a specific organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "Get list of the apps for an organization",
                "operationId": "app-list-by-organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization slug",
                        "name": "org-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "last_build_at",
                            "created_at"
                        ],
                        "type": "string",
                        "description": "Order of applications",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first app in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/users/{user-slug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show information about a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a specific user",
                "operationId": "user-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User slug",
                        "name": "user-slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.UserProfileRespModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        },
        "/users/{user-slug}/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all the available apps for a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "Get list of the apps for a user",
                "operationId": "app-list-by-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User slug",
                        "name": "user-slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "last_build_at",
                            "created_at"
                        ],
                        "type": "string",
                        "description": "Order of applications",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Slug of the first app in the response",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number of elements per page (default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/v0.AppListResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/service.StandardErrorRespModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "addons.Addon": {
            "type": "object",
            "properties": {
                "banner_image": {
                    "type": "string"
                },
                "card_header_colors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "developer_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addons.DeveloperLink"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addons.Plan"
                    }
                },
                "platforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preview_images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setup_guide": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "addons.DeveloperLink": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "addons.Feature": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "quantity": {
                    "type": "string"
                }
            }
        },
        "addons.Plan": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addons.Feature"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "service.StandardErrorRespModel": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "v0.ActivityEventListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ActivityEventResponseItemModel"
                    }
                },
                "paging": {
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.ActivityEventResponseItemModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "event_icon": {
                    "type": "string"
                },
                "event_stype": {
                    "type": "string"
                },
                "repository_avatar_icon_url": {
                    "type": "string"
                },
                "repository_title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "target_path_string": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "v0.AddonsListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addons.Addon"
                    }
                }
            }
        },
        "v0.AddonsShowResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/addons.Addon"
                }
            }
        },
        "v0.AndroidKeystoreFileUploadParams": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "private_key_password": {
                    "type": "string"
                },
                "upload_file_name": {
                    "type": "string"
                },
                "upload_file_size": {
                    "type": "integer"
                }
            }
        },
        "v0.AppListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AppResponseItemModel"
                    }
                },
                "paging": {
                    "description": "pagination",
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.AppResponseItemModel": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "is_disabled": {
                    "type": "boolean"
                },
                "is_public": {
                    "type": "boolean"
                },
                "owner": {
                    "type": "object",
                    "$ref": "#/definitions/v0.OwnerAccountResponseModel"
                },
                "project_type": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "repo_owner": {
                    "type": "string"
                },
                "repo_slug": {
                    "type": "string"
                },
                "repo_url": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "v0.AppShowResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.AppResponseItemModel"
                }
            }
        },
        "v0.AppWebhookCreateParams": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "string"
                },
                "headers": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "v0.AppWebhookListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AppWebhookResponseItemModel"
                    }
                },
                "paging": {
                    "description": "pagination",
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.AppWebhookResponseItemModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "events": {
                    "type": "string"
                },
                "headers": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "v0.AppWebhookResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.AppWebhookResponseItemModel"
                }
            }
        },
        "v0.AppWebhookUpdateParams": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "string"
                },
                "headers": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "v0.ArtifactDeleteResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.ArtifactResponseItemModel"
                }
            }
        },
        "v0.ArtifactListElementResponseModel": {
            "type": "object",
            "properties": {
                "artifact_type": {
                    "type": "string"
                },
                "file_size_bytes": {
                    "type": "string"
                },
                "is_public_page_enabled": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "v0.ArtifactListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ArtifactListElementResponseModel"
                    }
                },
                "paging": {
                    "description": "pagination",
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.ArtifactResponseItemModel": {
            "type": "object",
            "properties": {
                "artifact_type": {
                    "type": "string"
                },
                "expiring_download_url": {
                    "type": "string"
                },
                "file_size_bytes": {
                    "type": "string"
                },
                "is_public_page_enabled": {
                    "type": "boolean"
                },
                "public_install_page_url": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "v0.ArtifactShowResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.ArtifactResponseItemModel"
                }
            }
        },
        "v0.ArtifactUpdateParams": {
            "type": "object",
            "properties": {
                "is_public_page_enabled": {
                    "type": "boolean"
                }
            }
        },
        "v0.BranchListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v0.BuildAbortParams": {
            "type": "object",
            "properties": {
                "abort_reason": {
                    "type": "string"
                },
                "abort_with_success": {
                    "type": "boolean"
                },
                "skip_notifications": {
                    "type": "boolean"
                }
            }
        },
        "v0.BuildAbortResponseModel": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "v0.BuildCertificateListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.BuildCertificateResponseItemModel"
                    }
                },
                "paging": {
                    "description": "pagination",
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.BuildCertificateResponseItemModel": {
            "type": "object",
            "properties": {
                "certificate_password": {
                    "type": "string"
                },
                "download_url": {
                    "type": "string"
                },
                "is_expose": {
                    "type": "boolean"
                },
                "is_protected": {
                    "type": "boolean"
                },
                "processed": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "upload_file_name": {
                    "type": "string"
                },
                "upload_file_size": {
                    "type": "integer"
                },
                "upload_url": {
                    "type": "string"
                }
            }
        },
        "v0.BuildCertificateResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.BuildCertificateResponseItemModel"
                }
            }
        },
        "v0.BuildCertificateUpdateParams": {
            "type": "object",
            "properties": {
                "certificate_password": {
                    "type": "string"
                },
                "is_expose": {
                    "type": "boolean"
                },
                "is_protected": {
                    "type": "boolean"
                },
                "processed": {
                    "type": "boolean"
                }
            }
        },
        "v0.BuildCertificateUploadParams": {
            "type": "object",
            "properties": {
                "upload_file_name": {
                    "type": "string"
                },
                "upload_file_size": {
                    "type": "integer"
                }
            }
        },
        "v0.BuildListAllResponseItemModel": {
            "type": "object",
            "properties": {
                "abort_reason": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "build_number": {
                    "type": "integer"
                },
                "commit_hash": {
                    "type": "string"
                },
                "commit_message": {
                    "type": "string"
                },
                "commit_view_url": {
                    "type": "string"
                },
                "environment_prepare_finished_at": {
                    "type": "string"
                },
                "finished_at": {
                    "type": "string"
                },
                "is_on_hold": {
                    "type": "boolean"
                },
                "original_build_params": {
                    "type": "string"
                },
                "pull_request_id": {
                    "type": "string"
                },
                "pull_request_target_branch": {
                    "type": "string"
                },
                "pull_request_view_url": {
                    "type": "string"
                },
                "repository": {
                    "type": "object",
                    "$ref": "#/definitions/v0.AppResponseItemModel"
                },
                "slug": {
                    "type": "string"
                },
                "stack_config_type": {
                    "type": "string"
                },
                "stack_identifier": {
                    "type": "string"
                },
                "started_on_worker_at": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "status_text": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "triggered_at": {
                    "type": "string"
                },
                "triggered_by": {
                    "type": "string"
                },
                "triggered_workflow": {
                    "type": "string"
                }
            }
        },
        "v0.BuildListAllResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.BuildListAllResponseItemModel"
                    }
                },
                "paging": {
                    "description": "pagination",
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.BuildListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.BuildResponseItemModel"
                    }
                },
                "paging": {
                    "description": "pagination",
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.BuildLogChunkItemResponseModel": {
            "type": "object",
            "properties": {
                "chunk": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "v0.BuildLogInfoResponseModel": {
            "type": "object",
            "properties": {
                "expiring_raw_log_url": {
                    "type": "string"
                },
                "generated_log_chunks_num": {
                    "type": "string"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "log_chunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.BuildLogChunkItemResponseModel"
                    }
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "v0.BuildResponseItemModel": {
            "type": "object",
            "properties": {
                "abort_reason": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "build_number": {
                    "type": "integer"
                },
                "commit_hash": {
                    "type": "string"
                },
                "commit_message": {
                    "type": "string"
                },
                "commit_view_url": {
                    "type": "string"
                },
                "environment_prepare_finished_at": {
                    "type": "string"
                },
                "finished_at": {
                    "type": "string"
                },
                "is_on_hold": {
                    "type": "boolean"
                },
                "original_build_params": {
                    "type": "string"
                },
                "pull_request_id": {
                    "type": "string"
                },
                "pull_request_target_branch": {
                    "type": "string"
                },
                "pull_request_view_url": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "stack_config_type": {
                    "type": "string"
                },
                "stack_identifier": {
                    "type": "string"
                },
                "started_on_worker_at": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "status_text": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "triggered_at": {
                    "type": "string"
                },
                "triggered_by": {
                    "type": "string"
                },
                "triggered_workflow": {
                    "type": "string"
                }
            }
        },
        "v0.BuildShowResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.BuildResponseItemModel"
                }
            }
        },
        "v0.OrganizationDataModel": {
            "type": "object",
            "properties": {
                "avatar_icon_url": {
                    "type": "string"
                },
                "concurrency_count": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.OrganizationOwner"
                    }
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "v0.OrganizationListRespModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.OrganizationDataModel"
                    }
                }
            }
        },
        "v0.OrganizationOwner": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v0.OrganizationRespModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.OrganizationDataModel"
                }
            }
        },
        "v0.OwnerAccountResponseModel": {
            "type": "object",
            "properties": {
                "account_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "v0.PagingResponseModel": {
            "type": "object",
            "properties": {
                "next": {
                    "description": "Next is the \"anchor\" for pagination. This value should be passed to the same endpoint\nto get the next page. Empty/not included if there's no \"next\" page.\nStop paging when there's no \"Next\" item in the response!",
                    "type": "string"
                },
                "page_item_limit": {
                    "description": "PageItemLimit - per-page item count. A given page might include\nless items if there's not enough items. This value is the \"max item count per page\".",
                    "type": "integer"
                },
                "total_item_count": {
                    "description": "TotalItemCount - total item count, through \"all pages\"",
                    "type": "integer"
                }
            }
        },
        "v0.PlanDataModel": {
            "type": "object",
            "properties": {
                "container_count": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "v0.ProjectFileStorageDocumentUpdateParams": {
            "type": "object",
            "properties": {
                "exposed_meta_datastore": {
                    "type": "string"
                },
                "is_expose": {
                    "type": "boolean"
                },
                "is_protected": {
                    "type": "boolean"
                },
                "processed": {
                    "type": "boolean"
                },
                "user_env_key": {
                    "type": "string"
                }
            }
        },
        "v0.ProjectFileStorageListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ProjectFileStorageResponseItemModel"
                    }
                },
                "paging": {
                    "description": "pagination",
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.ProjectFileStorageResponseItemModel": {
            "type": "object",
            "properties": {
                "download_url": {
                    "type": "string"
                },
                "exposed_meta_datastore": {
                    "type": "string"
                },
                "is_expose": {
                    "type": "boolean"
                },
                "is_protected": {
                    "type": "boolean"
                },
                "processed": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "upload_file_name": {
                    "type": "string"
                },
                "upload_file_size": {
                    "type": "integer"
                },
                "upload_url": {
                    "type": "string"
                },
                "user_env_key": {
                    "type": "string"
                }
            }
        },
        "v0.ProjectFileStorageResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.ProjectFileStorageResponseItemModel"
                }
            }
        },
        "v0.ProjectFileStorageUploadParams": {
            "type": "object",
            "properties": {
                "upload_file_name": {
                    "type": "string"
                },
                "upload_file_size": {
                    "type": "integer"
                },
                "user_env_key": {
                    "type": "string"
                }
            }
        },
        "v0.ProvProfileDocumentUpdateParams": {
            "type": "object",
            "properties": {
                "is_expose": {
                    "type": "boolean"
                },
                "is_protected": {
                    "type": "boolean"
                },
                "processed": {
                    "type": "boolean"
                }
            }
        },
        "v0.ProvisionProfileListResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ProvisionProfileResponseItemModel"
                    }
                },
                "paging": {
                    "description": "pagination",
                    "type": "object",
                    "$ref": "#/definitions/v0.PagingResponseModel"
                }
            }
        },
        "v0.ProvisionProfileResponseItemModel": {
            "type": "object",
            "properties": {
                "download_url": {
                    "type": "string"
                },
                "is_expose": {
                    "type": "boolean"
                },
                "is_protected": {
                    "type": "boolean"
                },
                "processed": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "upload_file_name": {
                    "type": "string"
                },
                "upload_file_size": {
                    "type": "integer"
                },
                "upload_url": {
                    "type": "string"
                }
            }
        },
        "v0.ProvisionProfileResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.ProvisionProfileResponseItemModel"
                }
            }
        },
        "v0.ProvisionProfileUploadParams": {
            "type": "object",
            "properties": {
                "upload_file_name": {
                    "type": "string"
                },
                "upload_file_size": {
                    "type": "integer"
                }
            }
        },
        "v0.UserPlanDataModel": {
            "type": "object",
            "properties": {
                "current_plan": {
                    "type": "object",
                    "$ref": "#/definitions/v0.PlanDataModel"
                },
                "pending_plan": {
                    "type": "object",
                    "$ref": "#/definitions/v0.PlanDataModel"
                },
                "trial_expires_at": {
                    "type": "string"
                }
            }
        },
        "v0.UserPlanRespModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.UserPlanDataModel"
                }
            }
        },
        "v0.UserProfileDataModel": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "unconfirmed_email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v0.UserProfileRespModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.UserProfileDataModel"
                }
            }
        },
        "v0.WebhookDeliveryItemResponseModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "request_headers": {
                    "type": "string"
                },
                "request_payload": {
                    "type": "string"
                },
                "request_url": {
                    "type": "string"
                },
                "response_body": {
                    "type": "string"
                },
                "response_headers": {
                    "type": "string"
                },
                "response_http_status": {
                    "type": "string"
                },
                "response_seconds": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "v0.WebhookDeliveryItemShowResponseModel": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/v0.WebhookDeliveryItemResponseModel"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}